{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","service/ApiService.jsx","App.styled.jsx","App.jsx","index.js"],"names":["Header","styled","header","SearchForm","form","SearchFormBtn","button","SearchLabel","span","SearchInput","input","Searchbar","state","value","handleInputChange","e","setState","currentTarget","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","type","autocomplete","autoFocus","placeholder","onChange","Component","ImageGalleryItemValue","li","ImageGallery","img","ImageGalleryItem","webformatURL","alt","onSelect","src","onClick","ImageGalleryList","ul","images","map","id","tags","largeImageURL","tag","Overlay","div","ModalContainer","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackDropClick","target","window","addEventListener","removeEventListener","createPortal","LoadMoreBtn","Button","handleBtnClick","title","LoaderContainer","Spinner","color","height","width","timeout","fetchImage","searchQuery","page","a","url","fetch","then","response","ok","json","Promise","reject","Error","result","AppContainer","App","selectedImage","isLoading","fetchImages","undefined","data","hits","length","prevState","catch","console","log","message","finally","handleScroll","scrollTo","top","body","scrollHeight","behavior","handleFormSubmit","handleSelectedImage","imageUrl","handleModalClose","prevProps","prevQuery","newQuery","prevPage","newPage","showLoadButton","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc1f1ccc.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  Header,\n  SearchForm,\n  SearchFormBtn,\n  SearchLabel,\n  SearchInput,\n} from './Searchbar.styled';\n\nexport default class Searchbar extends Component {\n  state = {\n    value: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({ value: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.value.trim() === '') {\n      return toast.error('Please enter value');\n    }\n    this.props.onSubmit(this.state.value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <Header>\n        <SearchForm onSubmit={this.handleSubmit}>\n          <SearchFormBtn type=\"submit\">\n            <SearchLabel>Search</SearchLabel>\n          </SearchFormBtn>\n\n          <SearchInput\n            type=\"text\"\n            autocomplete=\"off\"\n            autoFocus\n            value={value}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInputChange}\n          />\n        </SearchForm>\n      </Header>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItemValue = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageGallery = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ImageGallery, ImageGalleryItemValue } from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ webformatURL, alt, onSelect }) => (\n  <ImageGalleryItemValue>\n    <ImageGallery src={webformatURL} alt={alt} onClick={onSelect} />\n  </ImageGalleryItemValue>\n);\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string,\n  onSelect: PropTypes.func,\n};\nexport default ImageGalleryItem;\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import ImageGalleryItem from 'components/ImageGalleryItem';\nimport { ImageGalleryList } from './ImageGallery.styled';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onSelect }) => {\n  return (\n    <ImageGalleryList>\n      {images &&\n        images.map(({ id, webformatURL, tags, largeImageURL }) => {\n          const selectImage = () => onSelect(largeImageURL);\n          return (\n            <ImageGalleryItem\n              key={id}\n              webformatURL={webformatURL}\n              tag={tags}\n              onSelect={selectImage}\n            />\n          );\n        })}\n    </ImageGalleryList>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onSelect: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalContainer } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, tag } = this.props;\n    return createPortal(\n      <Overlay onClick={this.handleBackDropClick}>\n        <ModalContainer>\n          <img src={src} alt={tag} />\n        </ModalContainer>\n      </Overlay>,\n      modalRoot,\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  margin: 0 auto;\n  width: 150px;\n  height: 40px;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React, { Component } from 'react';\nimport { LoadMoreBtn } from './Button.styled';\n\nexport default class Button extends Component {\n  render() {\n    const { handleBtnClick, title } = this.props;\n    return (\n      <LoadMoreBtn type=\"button\" onClick={handleBtnClick}>\n        {title}\n      </LoadMoreBtn>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  margin: 0 auto;\n`;\n","import Loader from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nimport React from 'react';\n\nconst Spinner = () => {\n  return (\n    <LoaderContainer>\n      <Loader\n        type=\"Puff\"\n        color=\"#3F51B5\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </LoaderContainer>\n  );\n};\n\nexport default Spinner;\n","const fetchImage = async (searchQuery, page) => {\n  const API_KEY = '22738426-58af921ac2532cd8236517c49';\n  const BASE_URL = 'https://pixabay.com/api/';\n  const url = `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}&page=${page}&image_type=photo&orientation=horisontal&per_page=12`;\n  const result = await fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error('Error'));\n  });\n\n  return result;\n};\n\nexport default fetchImage;\n","import styled from '@emotion/styled';\n\nexport const AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","import React, { Component } from 'react';\nimport Searchbar from 'components/Searchbar';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from 'components/ImageGallery';\nimport Modal from 'components/Modal';\nimport Button from 'components/Button/Button';\nimport Spinner from 'components/Loader/Loader';\nimport fetchImage from 'service/ApiService';\nimport { AppContainer } from 'App.styled';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    selectedImage: '',\n    isLoading: false,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const newQuery = this.state.searchQuery;\n    const prevPage = prevState.page;\n    const newPage = this.state.page;\n\n    if (prevQuery !== newQuery || prevPage !== newPage) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { page, searchQuery } = this.state;\n    if (searchQuery !== undefined) {\n      this.setState({ isLoading: true });\n\n      fetchImage(searchQuery, page)\n        .then(data => {\n          if (data.hits.length === 0) {\n            toast.error(`Ooops, no match found.`);\n            return;\n          }\n\n          this.setState(prevState => ({\n            images: [...prevState.images, ...data.hits],\n          }));\n        })\n        .catch(error => console.log(error.message))\n        .finally(() => {\n          this.setState({ isLoading: false });\n          this.handleScroll();\n        });\n    }\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery: searchQuery, images: [], page: 1 });\n  };\n\n  handleSelectedImage = imageUrl => {\n    this.setState({ selectedImage: imageUrl });\n  };\n\n  handleModalClose = () => {\n    this.setState({ selectedImage: '' });\n  };\n\n  handleBtnClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { selectedImage, isLoading, images } = this.state;\n    const showLoadButton = images.length > 0;\n    return (\n      <AppContainer>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {isLoading && <Spinner />}\n        <ImageGallery images={images} onSelect={this.handleSelectedImage} />\n        {selectedImage && (\n          <Modal src={selectedImage} onClose={this.handleModalClose} />\n        )}\n        {showLoadButton && (\n          <Button\n            title=\"Load more\"\n            handleBtnClick={this.handleBtnClick}\n          ></Button>\n        )}\n\n        <ToastContainer autoClose={3000} />\n      </AppContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}